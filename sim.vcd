$version Generated by VerilatedVcd $end
$timescale 1ps $end
 $scope module $rootio $end
 $upscope $end
 $scope module FixedPoint $end
  $var wire 32 V frac_bits [31:0] $end
 $upscope $end
 $scope module Common $end
  $var real 64 W e $end
 $upscope $end
 $scope module BenchPerceptron $end
  $var wire 32 Q input_units [31:0] $end
  $var wire 32 R output_units [31:0] $end
  $var wire 1 E clk $end
  $var wire 1 # rst $end
  $var real 64 $ values[0] $end
  $var real 64 & values[1] $end
  $var wire 32 F activation [31:0] $end
  $var wire 1 G training $end
  $var real 64 H learning_rate $end
  $var real 64 J next_layer_weights[0] $end
  $var real 64 + error_gradient_next_layer[0] $end
  $var real 64 - prediction $end
  $var real 64 / error_gradient $end
  $var real 64 9 current_weights[0] $end
  $var real 64 ; current_weights[1] $end
  $var real 64 ( expected $end
  $var real 64 L cost $end
  $var real 64 S epsilon $end
  $scope module perceptron $end
   $var wire 32 Q input_units [31:0] $end
   $var wire 32 R output_units [31:0] $end
   $var wire 1 E clk $end
   $var wire 1 # rst $end
   $var real 64 $ values[0] $end
   $var real 64 & values[1] $end
   $var wire 32 F activation [31:0] $end
   $var wire 1 G training $end
   $var real 64 H learning_rate $end
   $var real 64 J next_layer_weights[0] $end
   $var real 64 + error_gradient_next_layer[0] $end
   $var real 64 - prediction $end
   $var real 64 / error_gradient $end
   $var real 64 9 current_weights[0] $end
   $var real 64 ; current_weights[1] $end
   $var real 64 = weights[0] $end
   $var real 64 ? weights[1] $end
   $var real 64 A bias $end
   $var real 64 1 sum $end
   $var real 64 3 weight_gradient[0] $end
   $var real 64 5 weight_gradient[1] $end
   $var real 64 7 bias_gradient $end
   $var real 64 / local_error_gradient $end
   $scope module predict $end
    $var wire 32 F activation [31:0] $end
    $var real 64 1 sum $end
    $var real 64 - prediction $end
   $upscope $end
   $scope module unnamedblk1 $end
    $var wire 32 U i [31:0] $end
   $upscope $end
   $scope module unnamedblk2 $end
    $var wire 32 U i [31:0] $end
   $upscope $end
   $scope module unnamedblk3 $end
    $var wire 32 N i [31:0] $end
   $upscope $end
   $scope module unnamedblk4 $end
    $var wire 32 O i [31:0] $end
   $upscope $end
   $scope module unnamedblk5 $end
    $var wire 32 P i [31:0] $end
   $upscope $end
   $scope module unnamedblk6 $end
    $var wire 32 U i [31:0] $end
   $upscope $end
   $scope module unnamedblk7 $end
    $var wire 32 C i [31:0] $end
   $upscope $end
   $scope module unnamedblk8 $end
    $var wire 32 D i [31:0] $end
   $upscope $end
  $upscope $end
  $scope module unnamedblk1 $end
   $var wire 32 * i [31:0] $end
  $upscope $end
 $upscope $end
$enddefinitions $end


#0
1#
r0 $
r0 &
r0 (
b00000000000000000000000000000000 *
r1.999999960000001 +
r0.5 -
r0.4999999900000002 /
r0 1
r0 3
r0 5
r0.4999999900000002 7
r0 9
r0 ;
r0 =
r0 ?
r0 A
b00000000000000000000000000000000 C
b00000000000000000000000000000000 D
0E
b00000000000000000000000000000001 F
1G
r1 H
r1 J
r0.6931471605599454 L
b00000000000000000000000000000001 N
b00000000000000000000000000000000 O
b00000000000000000000000000000000 P
b00000000000000000000000000000010 Q
b00000000000000000000000000000001 R
r1e-08 S
b00000000000000000000000000000010 U
b00000000000000000000000000100000 V
r2.718281828 W
#1
r2.632316150529423 +
r0.6201064323235969 -
r0.6201064160004351 /
r0.49 1
r0.6201064160004351 7
r0.45 9
r-0.23 ;
r0.45 =
r-0.23 ?
r0.49 A
b00000000000000000000000000000010 C
1E
r0.9678641242317872 L
#2
0E
#3
r1.778800751462963 +
r0.4378234991245933 -
r0.4378234913365855 /
r-0.25 1
r0.4378234913365855 7
r-0.22 9
r0.3100000000000001 ;
r-0.22 =
r0.3100000000000001 ?
r-0.25 A
1E
r0.57593940210932 L
#4
0E
#5
0#
r1 $
r1 &
r1 (
r-1.23229557603718 +
r0.8114936116973229 -
r-0.1885063859797212 /
r1.459744618441236 1
r-0.1885063859797212 3
r-0.1885063859797212 5
r-0.1885063859797212 7
r0.3199148728137453 9
r0.8499148728137453 ;
r0.3199148728137453 =
r0.8499148728137453 ?
r0.2899148728137453 A
b00000000000000000000000000000010 D
1E
r0.2088787519507734 L
#6
0E
#7
r0 &
r0 (
r1.503599389110747 +
r0.3349292423193771 -
r0.3349292372833831 /
r-0.685974145080062 1
r0.3349292372833831 3
r0 5
r0.3349292372833831 7
r-0.327987072540031 9
r-0.327987072540031 =
r-0.357987072540031 A
1E
r0.4078618264233836 L
#8
0E
#9
r0 $
r1 &
r1.472747836513677 +
r0.3209971452820159 -
r0.3209971405545374 /
r-0.7491931020858212 1
r0 3
r0.3209971405545374 5
r0.3209971405545374 7
r0.2293544216339776 ;
r0.2293544216339776 ?
r-0.9785475237197988 A
1E
r0.3871299324073276 L
#10
0E
#11
r0 &
r1.286010241501467 +
r0.2224012260024003 -
r0.2224012231422977 /
r-1.251727601745239 1
r0 5
r0.2224012231422977 7
r-1.251727601745239 A
1E
r0.2515445896262254 L
#12
0E
#13
r1 $
r1 &
r1 (
b00000000000000000000000000000001 *
r-1.356220542154722 +
r0.737343194086284 -
r-0.2626568023515104 /
r1.032205188046285 1
r-0.2626568023515104 3
r-0.2626568023515104 5
r-0.2626568023515104 7
r0.4662014076924946 9
r1.023542901866503 ;
r0.4662014076924946 =
r1.023542901866503 ?
r-0.4575391215127131 A
1E
r0.3047018180004974 L
#14
0E
#15
r0 &
r0 (
r1.369476233914185 +
r0.2697938368400336 -
r0.2697938331452711 /
r-0.9956688096532335 1
r0.2697938331452711 3
r0 5
r0.2697938331452711 7
r-0.03596414022401284 9
r-0.03596414022401284 =
r-0.9597046694292206 A
1E
r0.3144283557290032 L
#16
0E
#17
r0 $
r1 &
r1.379815345680133 +
r0.2752653539239117 -
r0.2752653501257581 /
r-0.9680700268225738 1
r0 3
r0.2752653501257581 5
r0.2752653501257581 7
r0.5075887722365749 ;
r0.5075887722365749 ?
r-1.475658799059149 A
1E
r0.3219496827379295 L
#18
0E
#19
r0 &
r1.189807875724641 +
r0.1595281822345641 -
r0.1595281803364852 /
r-1.661742824503768 1
r0 5
r0.1595281803364852 7
r-1.661742824503768 A
1E
r0.1737918451182603 L
#20
0E
#21
r1 $
r1 &
r1 (
b00000000000000000000000000000010 *
r-1.329503478293173 +
r0.7521604892593232 -
r-0.2478395074456418 /
r1.110168315362341 1
r-0.2478395074456418 3
r-0.2478395074456418 5
r-0.2478395074456418 7
r0.7307980290605026 9
r1.274350941521091 ;
r0.7307980290605026 =
r1.274350941521091 ?
r-0.8949806552192523 A
1E
r0.2848055479390895 L
#22
0E
#23
r0 &
r0 (
r1.338823736848834 +
r0.2530756969058187 -
r0.2530756935175812 /
r-1.082275204401803 1
r0.2530756935175812 3
r0 5
r0.2530756935175812 7
r0.2717517399389758 9
r0.2717517399389758 =
r-1.354026944340779 A
1E
r0.2917914201417163 L
#24
0E
#25
r0 $
r1 &
r1.353504488501498 +
r0.2611771922736051 -
r0.2611771887385601 /
r-1.039859044761668 1
r0 3
r0.2611771887385601 5
r0.2611771887385601 7
r0.7942594205501006 ;
r0.7942594205501006 ?
r-1.834118465311769 A
1E
r0.302697146285042 L
#26
0E
#27
r0 &
r1.139196742350285 +
r0.1221885110512825 -
r0.1221885096593149 /
r-1.971866841111929 1
r0 5
r0.1221885096593149 7
r-1.971866841111929 A
1E
r0.1303234020772839 L
#28
0E
#29
r1 $
r1 &
r1 (
b00000000000000000000000000000011 *
r-1.292117728464975 +
r0.7739232773060194 -
r-0.2260767197728032 /
r1.230598321348234 1
r-0.2260767197728032 3
r-0.2260767197728032 5
r-0.2260767197728032 7
r0.9839030739293383 9
r1.506410754540463 ;
r0.9839030739293383 =
r1.506410754540463 ?
r-1.259715507121567 A
1E
r0.2562825223120563 L
#30
0E
#31
r0 &
r0 (
r1.320211393972484 +
r0.2425455564438734 -
r0.2425455532417593 /
r-1.138773840889381 1
r0.2425455532417593 3
r0 5
r0.2425455532417593 7
r0.552422370080762 9
r0.552422370080762 =
r-1.691196210970143 A
1E
r0.2777918707249772 L
#32
0E
#33
r0 $
r1 &
r1.335325099682859 +
r0.2511187074336801 -
r0.251118704080429 /
r-1.092654717931118 1
r0 3
r0.251118704080429 5
r0.251118704080429 7
r1.052476123789744 ;
r1.052476123789744 ?
r-2.145130841720862 A
1E
r0.2891747825676342 L
#34
0E
#35
r0 &
r1.105407861215672 +
r0.09535654301736937 -
r0.09535654196329064 /
r-2.249917945523543 1
r0 5
r0.09535654196329064 7
r-2.249917945523543 A
1E
r0.1002143720397131 L
#36
0E
#37
r1 $
r1 &
r1 (
b00000000000000000000000000000100 *
r-1.266430396620689 +
r0.7896209614078049 -
r-0.210379035927891 /
r1.322642185421765 1
r-0.210379035927891 3
r-0.210379035927891 5
r-0.210379035927891 7
r1.208309582439029 9
r1.708363336148012 ;
r1.208309582439029 =
r1.708363336148012 ?
r-1.594030733165276 A
1E
r0.2362022316818692 L
#38
0E
#39
r0 &
r0 (
r1.302638355640341 +
r0.2323272359947945 -
r0.2323272329684108 /
r-1.195216676189918 1
r0.2323272329684108 3
r0 5
r0.2323272329684108 7
r0.8035618197071939 9
r0.8035618197071939 =
r-1.998778495897112 A
1E
r0.2643917121444836 L
#40
0E
#41
r0 $
r1 &
r1.317836028283212 +
r0.2411802641908551 -
r0.2411802610124947 /
r-1.146219609069022 1
r0 3
r0.2411802610124947 5
r0.2411802610124947 7
r1.280461111488051 ;
r1.280461111488051 ?
r-2.426680720557072 A
1E
r0.2759910188440078 L
#42
0E
#43
r0 &
r1.081443844819197 +
r0.0753102956050872 -
r0.07531029479064863 /
r-2.50784137366756 1
r0 5
r0.07531029479064863 7
r-2.50784137366756 A
1E
r0.07829704164099233 L
#44
0E
#45
b00000000000000000000000000000101 *
1E
0G
#46
0E
#47
1E
#48
0E
#49
1E
#50
0E
